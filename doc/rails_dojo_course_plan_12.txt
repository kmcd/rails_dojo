12:00 intro to associations

      --> What are associations?
      
      --> What do you need associations ?

      In Rails, an association is a connection between two Active Record
      models. Associations are implemented using macro-style calls, so
      that you can declaratively add features to your models. For example,
      by declaring that one model belongs_to another, you instruct Rails to
      maintain Primary Key–Foreign Key information between instances of
      the two models, and you also get a number of utility methods added to
      your model. Rails supports six types of association:

      A belongs_to association sets up a one-to-one connection with another
      model, such that each instance of the declaring model “belongs to”
      one instance of the other model.

      app/models/reservation.rb:  belongs_to :room 
      app/models/occupancy.rb: belongs_to :reservation
      app/models/occupancy.rb:  belongs_to :room

      --> What kind of associations are available ?
      
12:05  belongs_to
       ONE FK on current table
       
12:10  app/models/guest.rb:  belongs_to :occupancy
       app/models/reservation.rb:  belongs_to :room
       app/models/occupancy.rb:  belongs_to :reservation
       app/models/occupancy.rb:  belongs_to :room
                                              
12:15  has_one
12:20  ONE FK on other table

12:25  has_many                                             
       MANY FK's on other table
       app/models/occupancy.rb:  has_many :guests has_many :reservations
       app/models/room.rb:  has_many :occupancies                                            
       
12:30 
12:35 
12:40  has_many through        
       app/models/room.rb:  has_many :guests, :through => :occupancies
12:44  
12:50  habtm / Tidy up views
12:55
